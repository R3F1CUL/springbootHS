buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'codenarc'

jar {
    baseName = 'gs-spring-boot'
    version = '0.1.0'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

findbugs {
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    reportsDir = file("$project.buildDir/findbugsReports")
    effort = "max"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    omitVisitors = ["FindNonShortCircuit"]
}

pmd {
    reportsDir = file("$project.buildDir/pmdReports")
    sourceSets = [sourceSets.main]
}

codenarc {
    reportsDir = file("$project.buildDir/codenarcReports")
    sourceSets = [sourceSets.main]
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    // tag::jetty[]
    compile 'io.springfox:springfox-swagger2:2.2.2'
    compile 'io.springfox:springfox-core:2.2.2'
    compile 'io.springfox:springfox-swagger-ui:2.2.2'
    compile 'io.springfox:springfox-swagger-common:2.2.2'

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    compile ('com.h2database:h2:1.4.187')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

//            {
//        exclude module: "spring-boot-starter-tomcat"
//    }
//    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile('org.apache.logging.log4j:log4j-core:2.3')
    compile("org.apache.maven:maven-plugin-api:3.3.3")
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

